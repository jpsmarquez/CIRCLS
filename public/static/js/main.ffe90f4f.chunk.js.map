{"version":3,"sources":["config/firebaseconfig.js","views/Login.js","views/HomeAdmin.js","views/Employees.js","views/Inversions.js","views/Inversion.js","views/Profile.js","views/FPass.js","containers/formasdecampo.js","views/createInversion.js","views/register.js","containers/formasdecampoS.js","views/createSale.js","views/Sales.js","views/Sale.js","views/Notas.js","views/nota.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","useState","email","setEmail","password","setPassword","error","setError","style","flexDirection","display","justifyContent","alignItems","height","className","textAlign","fontSize","color","flex","Item","labelCol","span","wrapperCol","placeholder","onChange","e","target","value","size","Password","type","shape","onClick","signInWithEmailAndPassword","catch","errorMessage","message","console","log","backgroundColor","to","HomeAdmin","props","width","logout","Employees","ref","UsuarioCreado","setUsuarioCreado","createUserWithEmailAndPassword","then","Inversions","variable","setVariable","arrayofdb","setArrayofdb","searched","setSearched","useEffect","once","snapshot","forEach","childSnapshot","key","childData","val","titulo","desc","tipo","descrip","campos","id","arraydbaux","push","toLowerCase","autoComplete","map","item","index","splice","window","location","reload","autoSize","true","pathname","withRouter","match","params","ndesc","setnD","ntitulo","setnT","cancelD","title","onConfirm","set","success","onCancel","okText","cancelText","TextArea","updateinput","st","img","remove","history","user","currentUser","newemail","newpassword","confirmedP","setConfirmP","credential","EmailAuthProvider","borderColor","borderWidth","reauthenticateWithCredential","updateEmail","updatePassword","delete","ResetPassword","sendPasswordResetEmail","FormasDeCampo","llenarcampos","Input","marginVertical","rows","NewInversion","setD","setT","setC","image","setImage","rstring","c","length","formularios","files","name","put","NewNte","nota","setN","tit","refreshPage","n","info","t","App","logged","setlogged","signOut","onAuthStateChanged","exact","path","render","Sale","component","FPass","Register","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffe90f4f.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport \"firebase/auth\";\n\nconst Aplicacion =  {\n  apiKey: \"AIzaSyAW2Bbkc7yb7IVnQNmdfr4eRFQAoTLDR1U\",\n  authDomain: \"hectormaccisey.firebaseapp.com\",\n  databaseURL: \"https://hectormaccisey.firebaseio.com\",\n  projectId: \"hectormaccisey\",\n  storageBucket: \"hectormaccisey.appspot.com\",\n  messagingSenderId: \"405112368404\",\n  appId: \"1:405112368404:web:79acd298c00e99b85c2601\",\n  measurementId: \"G-WE76DXW3TD\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(Aplicacion);\n  firebase.analytics();\n\nexport {Aplicacion};\n\n\n\n","import React,{useEffect,useState} from \"react\";\nimport {Link,Redirect} from \"react-router-dom\";\nimport * as firebase from 'firebase';\nimport {Aplicacion} from '../config/firebaseconfig';\nimport { Button , Form, Input, Card} from 'antd';\n\n\n\nexport default function Login() {\n  const [email, setEmail]=useState('');\n  const [password, setPassword]=useState('');\n  const [error, setError]=useState(false);\n\n    const submit =()=>{\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\n       var errorMessage = error.message;\n       setError(errorMessage)\n       console.log(errorMessage)\n       console.log(email)\n    });\n   \n  };\n  return (\n    <div style={{flexDirection:'column',display:'flex',justifyContent:'center', alignItems:'center', height: '-webkit-fill-available'}}>\n           \n            <label className=\"titles\" style={{textAlign:'center', fontSize:250 , color: 'gold' } }>H</label>\n            <br/>\n            <Form style={{textAlign:'center',flex:'auto'}} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                \n                <Input\n                className=\"inputs\"\n                placeholder={\"correo\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  size={\"default\"}\n                />\n\n              </Form.Item>\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input.Password\n                className=\"inputs\"\n                 type=\"password\"\n                placeholder={\"contraseña\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  size={\"default\"}\n                  \n                />\n              </Form.Item>\n              <br/>\n              <br/>\n              <Button \n              className=\"hbuttonss\"\n              type=\"primary\" shape=\"round\"onClick={submit} style={{backgroundColor:'royalblue'}} >\n                ENTRAR\n              </Button>\n              <br/>\n              <br/>\n              <Link  to=\"/FPass\">\n              <Button \n             className=\"hbuttonss\"\n              type=\"primary\" shape=\"round\" style={{backgroundColor:'royalblue'}}>\n               ¿OLVIDASTE LA CONTRASEÑA?\n              </Button>\n              </Link>\n              <br/>\n              <br/>\n              <Link  to=\"/Register\">\n              <Button \n              className=\"hbuttonss\"\n              type=\"primary\" shape=\"round\" style={{backgroundColor:'royalblue'}}>\n               REGISTRO\n              </Button>\n              </Link>\n\n              {\n             error !== false ? <h1>{error}</h1> : null\n              }\n\n              </Form>\n\n    </div>\n\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Row, Col, Card } from 'antd';\nimport '../App.css';\n\nexport default function HomeAdmin(props) {\n      return (\n            <div\n                  style={{\n                        display: 'flex',\n                        textAlign: 'center',\n                        justifyContent: 'space-around'\n            }}>\n                  <Row>\n                        <Col span={30}>\n\n                        <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n                              <Link to=\"/NewSale\">\n                                    <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height: 80, backgroundColor: 'royalblue', fontSize: 45 }}>\n                                          NUEVA VENTA\n                                            </Button>\n                              </Link>\n                              <br />\n                              <br />\n                              <br />\n                              <Link to=\"/Sales\">\n                                    <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height: 80, backgroundColor: 'royalblue', fontSize: 45 }} >\n                                          VENTAS\n                                            </Button>\n                              </Link>\n                              <br />\n                              <br />\n                              <br />\n                              <Link to=\"/NewInversion\">\n                                    <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height: 80, backgroundColor: 'royalblue', fontSize: 45 }}>\n                                          NUEVA COMPRA\n                    </Button>\n                              </Link>\n\n                              <br />\n                              <br />\n                              <br />\n\n                              <Link to=\"/Inversions\">\n                                    <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height: 80, backgroundColor: 'royalblue', fontSize: 45 }} >\n                                          COMPRAS\n                    </Button>\n                              </Link>\n\n\n                        </Col>\n                  </Row>\n            \n\n\n\n<Row>\n      \n      <Col span={30}>\n   \n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <Link to=\"/Employees\">\n                  <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height: 80, backgroundColor: 'royalblue', fontSize: 45,  }}  >\n                        CREAR EMPLEADO\n                        </Button>\n            </Link>\n        \n            <br />\n            <br />\n            <br />\n            \n            <Link to=\"/Notas\">\n                  <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height: 80, backgroundColor: 'royalblue', fontSize: 45,  }}  >\n                      NOTAS\n                        </Button>\n            </Link>\n\n            <br />\n            <br />\n            <br />\n\n            <Link to=\"/Profile\">\n                  <Button className=\"buttonss\" type=\"primary\" shape=\"round\" style={{ width: 500, height: 80, backgroundColor: 'royalblue', fontSize: 45 }} >\n                        PERFIL\n                        </Button>\n\n            </Link>\n            <br />\n            <br />\n            <br />\n\n            <Button className=\"buttonss\" onClick={props.logout} size='100px' type=\"primary\" shape=\"round\" style={{ width: 500, height: 80, backgroundColor: 'royalblue', fontSize: 45 }}>\n                  SALIR\n                   </Button>\n\n\n      </Col>\n</Row>\n</div>\n\n\n            \n\n\n      );\n\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button , Form, Input,Card,Row,Col}from 'antd';\nimport * as firebase from \"firebase/app\";\n\n\nexport default function Employees(props) {\n\n\n  var ref = firebase.database().ref(\"/usuario\");\n  const [email, setEmail]=useState('');\n  const [password, setPassword]=useState('');\n  const [tipo,setType] = useState('');\n  const [nombre,setN] = useState('');\n  const [error, setError]=useState('');\n  const [UsuarioCreado,setUsuarioCreado]=useState('');\n\n\n\n  const submit =()=>{\n    \n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      // Update successful.\n      console.log('success')\n\n      setUsuarioCreado(\"USUARIO CREADO\")\n      \n      \n       }, (error) => {\n        var errorMessage = error.message;\n        setError(errorMessage);\n      // An error happened.\n      console.log(error)\n      }).catch(function(error) {\n \n      \n     })  \n  };\n\n  return (\n\n    <div style={{\n      display: 'flex',\n      justifyContent: 'center',\n      textAlign: 'center' \n    }}>\n      \n      <Row>\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'gold' ,textAlign: 'center'  }}>NUEVO EMPLEADO</label>\n        </Col>\n        \n        <Form style={{textAlign:'center',flex:'auto',justifyContent: 'center'}} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input \n                className=\"inputs\"\n                type={'email'}\n                placeholder={\"correo\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  size={\"default\"}\n                />\n              </Form.Item>\n\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                <Input \n                className=\"inputs\"\n                placeholder={\"contraseña\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  size={\"default\"} />\n              </Form.Item>\n\n              <br />\n              <Button \n              className=\"buttonss\"\n              type=\"primary\" shape=\"round\" onClick={submit} style={{backgroundColor:'royalblue'}} >\n                REGISTRAR\n              </Button>\n              \n              {\n              UsuarioCreado ? <h1>{UsuarioCreado} </h1> : <h1>{error} </h1>\n              }\n              \n              \n              <Link  to=\"/Home\">\n             <Button \n             className=\"buttonss\"\n             type=\"primary\" shape=\"round\" style={{backgroundColor:'royalblue'}} >\n              INICIO\n             </Button>\n              </Link>\n         </Form>\n\n      </Row>\n    </div>\n      );\n    };\n","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Button, Col, Card, Row, Input, message, Form } from 'antd';\nimport * as firebase from \"firebase/app\";\n\nexport default function Inversions(props) {\n\n  let ref = firebase.database().ref(\"/inversion\");\n  const [variable, setVariable] = useState(false)\n  const [arrayofdb, setArrayofdb] = useState([])\n  let [searched, setSearched] = useState('');\n  const [st, setSt] = useState('');\n\n  console.log(searched)\n\n  useEffect(() => {\n    if (!variable) {\n\n      ref.once(\"value\", (snapshot) => {\n\n        console.log(snapshot)\n\n        snapshot.forEach((childSnapshot) => {\n\n          console.log(childSnapshot.key)\n\n          const childData = childSnapshot.val();\n\n          console.log(childData)\n          const titulo = childData.titulo;\n          const tipo = childData.tipo;\n          const desc = childData.descrip;\n          const campos = childData.campos;\n          const id = childSnapshot.key\n\n          if (campos) {\n            const arraydbaux = arrayofdb;\n            arraydbaux.push({\n              titulo: titulo,\n              desc: desc,\n              campos: campos,\n              id: id\n            })\n            setArrayofdb(arraydbaux)\n          }\n        });\n        setVariable(true)\n\n      });\n    }\n  }, [])\n\n  const ssearched = () => {\n    arrayofdb.map((item, index) => {\n      if (searched === item.titulo.toLowerCase() && searched !== -1) {\n        console.log(item.titulo)\n        console.log(item.desc)\n        console.log(item.campos)\n        console.log(item)\n\n        const arraydbaux = arrayofdb;\n        arraydbaux.splice({})\n\n        arraydbaux.push({\n          titulo: item.titulo,\n          desc: item.desc,\n          campos: item.campos,\n        })\n        setArrayofdb(arraydbaux)\n      } \n    })\n\n\n    setSearched('')\n  };\n\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  console.log(arrayofdb)\n\n  return (\n    <div style={{\n    \n      textAlign: 'center' ,\n      justifyContent: 'center'\n    }}>\n      <Row>\n        <Col span={24}>\n          <label className=\"ctitles\" style={{ textAlign: 'center', fontSize: 100, color: 'gold' }}>COMPRAS</label>\n        </Col>\n        <Col span={24}>\n          <Link to=\"/Home\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n              INICIO\n              </Button>\n          </Link>\n        </Col>\n        <br />\n        <br />\n        <Col span={24}>\n          <Link to=\"/NewInversion\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n              NUEVA COMPRA\n              </Button>\n          </Link>\n        </Col>\n        <Col span={24}>\n          <br />\n          <Input\n            id=\"Buscar\"\n            size={\"large\"}\n            style={{ textAlign: 'center', width:300 }}\n            placeholder=\"BUSCA POR TITULO\"\n            onChange={(e) => setSearched(e.target.value.toLowerCase())}\n            value={searched}\n            autoComplete={\"off\"}\n          />\n          <h5 style={{ color: 'gold' }}>SI NO EXISTE REGISTRO DE SU BUSQUEDA, </h5>\n          <h5 style={{ color: 'gold' }}>ESTA MAL ESCRITA O </h5>\n          <h5 style={{ color: 'gold' }}>HAY INVERSIONES CON EL MISMO TITULO  </h5>\n      \n          <Button onClick={ssearched} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n            BUSCAR\n          </Button>\n          <br />\n          <br />\n          <Col span={24}>\n            <Button onClick={refreshPage} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n              NUEVA BUSQUEDA\n            </Button>\n          </Col>\n          <br />\n\n        </Col>\n        \n        {\n          arrayofdb.map((item, index) => {\n            return (\n              <Row   >\n              <Col   >\n              <Card  shape=\"round\"  className=\"invscampos\"  autoSize true style={{ width: 1440, alignItems:'center',backgroundColor:'rgb(101, 108, 146)',color:\"gold\" }} key={index} >\n                {item.titulo}\n                <br />\n                {item.desc}\n                <br />\n                <Link to={{ pathname: `/Inversion/${item.id}` }}>\n                <br />\n                <Button type=\"primary\" size='small' shape=\"round\" style={{ backgroundColor: 'royalblue', textAlign: 'center' }} >\n                    INSPECCIONAR\n                </Button>\n                </Link>\n              </Card>\n              </Col>\n              </Row>\n            )\n          })\n        }\n\n      </Row>\n    </div>\n  );\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter} from \"react-router-dom\";\nimport { Button, Col, Card, Row, Popconfirm, message,Input } from 'antd';\nimport * as firebase from \"firebase/app\";\nimport { STATUS_CODES } from \"http\";\n\nexport default withRouter( function Inversion(props) {\n\n  console.log(props)\n  var ref = firebase.database().ref(`/inversion/${props.match.params.id}`);\n  console.log(ref)\n\n  const [arrayofdb, setArrayofdb] = useState({})\n  const [index, setIndex] = useState(0);\n  const [campos, setC] = useState('');\n  const [img, setI] = useState('');\n  const [ndesc, setnD] = useState('');\n  const [ntitulo, setnT] = useState('');\n\n\n  useEffect(() => {\n    ref.once(\"value\", (snapshot) => {\n      console.log(snapshot.val())\n      const childData = snapshot.val();\n      setArrayofdb(childData)\n      console.log(childData)\n    });\n}, []);\n\n  const deleteI =()=> {\n    ref.remove();\n    message.success('INVERSION ELIMINADA');\n    props.history.push('/Inversions')\n  };\n\n  function cancelD(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const updateT =()=> {\n    firebase.database().ref(`/inversion/${props.match.params.id}/titulo`).set(ntitulo)\n    message.success('TITULO MODIFICADO');\n  };\n\n  function cancelT(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n\n  const [formularios, setFormularios] = useState([]);\n\n\n  const deletelastelement = () => {\n    let f = [...formularios];\n    f.pop();\n    setFormularios(f)\n  };\n\n\n  const updateD = () => {\n    firebase.database().ref(`/inversion/${props.match.params.id}/descrip`).set(ndesc)\n    message.success('DESCRIPCION MODIFICADA');\n  };\n\n  function cancelD(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const updateC = () => {\n    firebase.database().ref(`/inversion/${props.match.params.id}/campos`).set(arrayofdb.campos)\n    message.success('CAMPO EDITADO');\n  };\n\n  function cancelc() {\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  function getimg() {\n    let st = firebase.storage().ref('images/'+arrayofdb.img)\n    console.log(st)\n\n\n  }\n\n  function updateinput(e){\n    setArrayofdb(\n      {...arrayofdb,\n         campos: e.target.value\n      })\n  }\n\n  return (\n\n    <div style={{\n\n      display: 'flex',\n      textAlign: 'center' ,\n      justifyContent: 'center',\n      \n    }}>\n      <Row >\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'gold' }}>{arrayofdb.titulo}</label>\n\n        <br />\n\n        <Link to=\"/Home\">\n          <Button type=\"primary\" size={\"small\"}  shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n            INICIO\n        </Button>\n        </Link>\n        \n        <br />\n        <br />\n\n        <Link to=\"/Inversions\">\n          <Button type=\"primary\" size={\"small\"}  shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n            INVERSIONES\n        </Button>\n        </Link>\n        <br />\n        <br />\n          <Input\n                  placeholder={`${arrayofdb.titulo} `}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnT(e.target.value)}\n                  value={ntitulo}\n                  size={\"default\"}\n          />\n          <br />\n          <br />\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateT}\n            onCancel={cancelT}\n            okText=\"SI\"\n            cancelText=\"NO\">\n             <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >EDITAR TITULO</Button>\n          </Popconfirm>\n\n          <br />\n          <br />\n          <Input\n                  placeholder={`${arrayofdb.descrip} `}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnD(e.target.value)}\n                  value={ndesc}\n                  size={\"default\"}\n          />\n          <br />\n          <br />\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateD}\n            onCancel={cancelD}\n            okText=\"SI\"\n            cancelText=\"NO\">\n             <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >EDITAR DESCRIPCION</Button>\n          </Popconfirm>\n          <br/>\n          <br/>\n          <Input.TextArea\n                  style={{textAlign: 'center' }}\n                  value={`${arrayofdb.campos}`}\n                  onChange={(e) => updateinput(e)}\n                  autoSize true \n          />\n          <br/>\n          <br/>\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateC}\n            onCancel={cancelc}\n            okText=\"SI\"\n            cancelText=\"NO\">\n            <Button type=\"primary\" shape=\"round\" size={\"small\"}  style={{ backgroundColor: 'royalblue' }}>EDITAR CAMPO </Button>\n          </Popconfirm>\n          <br/>\n          <br/>\n          <Link onClick={getimg} >\n          IMAGEN\n          </Link>\n         \n\n      \n\n          <br/>\n          <br/>\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={deleteI}\n            onCancel={cancelD}\n            okText=\"SI\"\n            cancelText=\"NO\">\n            <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >BORRAR INVERSION</Button>\n          </Popconfirm>\n          <br/>\n          <br/>\n        </Col>\n      </Row>\n    </div>\n  );\n});\n\n/*\n  const submit = (campo2e) => {\n    firebase.database().ref(`/inversion/${props.match.params.id}/campos`).update({\n     campos:campos\n   })\n  };\n\n\n            {\n              formularios.map((item) => {\n\n                return item;\n\n              })\n          }\n          <br/>\n          <Button type=\"primary\" size={\"small\"} onClick={submit} style={{ backgroundColor: 'grey' }}>\n              GUARDAR CAMPO/CAMPOS\n          </Button>\n          <br/>\n\n\n                    {\n            arrayofdb.campos ? (\n              arrayofdb.campos.map((item, index) => {\n              \n                return(\n                  <Input\n                  placeholder={`EDITAR CAMPO ${item}`}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnD(e.target.value)}\n                  value={campo2e}\n                  size={\"default\"}\n                  />\n                )\n\n              }))\n              : null\n          }\n\n\n  const llenarcampos = (rstring) => {\n    console.log(rstring)\n\n    let c = [...campos]\n    console.log([campos])\n    let n = campos.length\n\n    c[n] = rstring\n    console.log(c)\n    setC(c)\n\n  }\n\n\n    const addform = () => {\n    let f = [...formularios];\n    f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos} value={campos[index]} />);\n    setFormularios(f)\n  };\n\n\n      firebase.database().ref(`/inversion/${props.match.params.id}/campos`).update({\n     campos\n   })\n\n\n\n            \n\n          {\n            arrayofdb.campos ? (\n              arrayofdb.campos.map((item, index) => {\n              \n                return(\n                  <p>{\n                    item\n                  }</p>\n                )\n\n              }))\n              : null\n          }\n*/","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Carousel, Radio, Col, Card, Row, Input, Form, Popconfirm, message } from 'antd';\nimport * as firebase from \"firebase/app\";\n\n\nexport default function Employees(props) {\n\n  let user = firebase.auth().currentUser\n  let [newemail, setEmail] = useState('');\n  let [newpassword, setPassword] = useState('');\n  let [confirmedP,setConfirmP]= useState('');\n  const [error, setError]=useState(false);\n\n  \n  \n  let credential = firebase.auth.EmailAuthProvider.credential(\n    user.email,\n    confirmedP\n  );\n\n\n  // Prompt the user to re-provide their sign-in credentials\n\nconst submitemail = () => {\n\n\n      console.log(newemail)\n      console.log(user.email)\n      console.log(user.password)\n\n      user.reauthenticateWithCredential(credential).then(function () {\n        // User re-authenticated.\n        user.updateEmail(newemail).then(() => {\n          // Update successful.\n          console.log('success')\n          message.success('CORREO CAMBIADO');\n        }, (error) => {\n          // An error happened.\n          console.log(error)\n          var errorMessage = error.message;\n          setError(errorMessage)\n        });\n      }).catch(function (error) {\n        // An error happened.\n        var errorMessage = error.message;\n        setError(errorMessage)\n      });\n    };\n  \n\n  function cancelE(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const submitpassword = () => {\n\n      user.reauthenticateWithCredential(credential).then(function () {\n        // User re-authenticated.\n        user.updatePassword(newpassword).then(() => {\n          // Update successful.\n          console.log('success')\n          message.success('CONTRASEÑA CAMBIADA');\n        }, (error) => {\n          // An error happened.\n          console.log(error)\n          var errorMessage = error.message;\n          setError(errorMessage)\n        });\n      }).catch(function (error) {\n        // An error happened.\n        var errorMessage = error.message;\n        setError(errorMessage)\n      });\n\n\n  };\n\n  const deleteacc = () => {\n    user.reauthenticateWithCredential(credential).then(function () {\n      // User re-authenticated.\n      user.delete().then(function() {\n        // User deleted.\n      }).catch(function(error) {\n        // An error happened.\n        var errorMessage = error.message;\n        setError(errorMessage)\n      });\n    }).catch(function (error) {\n      // An error happened.\n      var errorMessage = error.message;\n      setError(errorMessage)\n    });\n\n    \n  };\n   \n\n\n  function cancelP(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  function cancelA(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n\n  return (\n\n    <div style={{\n      display: 'flex',\n      textAlign: 'center' ,\n      justifyContent: 'center'\n    }}>\n      <Row>\n        <Col span={24}>\n          <label style={{ textAlign: 'center', fontSize: 100, color: 'gold' }}>PERFIL</label>\n        <br />\n        <Link to=\"/Home\">\n          <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue',textAlign: 'center'  }} >INICIO</Button>\n        </Link>\n       \n        <br />\n        <br />\n      \n        <Card type=\"flex\" style={{ width: 300,textAlign: 'center', alignItems:'center',borderColor:\"royalblue\",backgroundColor:'steelblue',color:\"gold\", borderWidth:5, }}>\n        <p>INGRESA TU CONTRASEÑA ACTUAL ANTES DE EFECTUAR ALGUN CAMBIO</p>\n        <Input\n        placeholder={\"contraseña actual\"}\n        onChange={(e) => setConfirmP(e.target.value)}\n        size={\"default\"}\n        style={{ textAlign: 'center' }}/>\n        <br />\n\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n\n            <Input\n              type=\"email\"\n              placeholder={\"correo\"}\n              style={{ textAlign: 'center' }}\n              onChange={(e) => setEmail(e.target.value)}\n              value={newemail}\n              size={\"default\"}\n            />\n\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={submitemail}\n            onCancel={cancelE}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <br />\n            <br />\n           <Button  type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >CAMBIAR CORREO</Button>\n\n          </Popconfirm>\n          </Form.Item>\n\n          \n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n\n       <Input\n        placeholder={\"contraseña actual\"}\n        style={{ textAlign: 'center' }}\n        onChange={(e) => setConfirmP(e.target.value)}\n        size={\"default\"}\n        />\n\n          <Input\n           placeholder={\"nueva contraseña\"}\n           style={{ textAlign: 'center' }}\n           onChange={(e) => setPassword(e.target.value)}\n           value={newpassword}\n           size={\"default\"}\n           \n           />\n\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={submitpassword}\n            onCancel={cancelP}\n            okText=\"SI\"\n            cancelText=\"NO\">\n               <br />\n            <br />\n            <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >CAMBIAR CONTRASEÑA</Button>\n          </Popconfirm>\n          </Form.Item>\n\n          <br />\n          <Input\n        placeholder={\"contraseña actual\"}\n        style={{ textAlign: 'center' }}\n        onChange={(e) => setConfirmP(e.target.value)}\n        size={\"default\"}\n        \n        \n        />\n          <Popconfirm\n            title=\"¿SEGURO QUE QUIERES BORRAR?\"\n            onConfirm={deleteacc}\n            onCancel={cancelA}\n            okText=\"SI\"\n            cancelText=\"NO\"\n          >\n             <br />\n            <br />\n            <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >BORRAR CUENTA</Button>\n          </Popconfirm>\n          <br />\n\n          {\n             error !== false ? <h1>{error}</h1> : null\n          }\n\n        </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\n\n","import React,{useEffect,useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport * as firebase from 'firebase';\nimport { Button , Form, Input, Card, message} from 'antd';\n\n\n\nexport default function ResetPassword() {\n  const [email, setEmail]=useState('');\n\n\n\n\n  const submit = ()=>{\n    console.log(email);\n    const auth = firebase.auth();\n    auth.sendPasswordResetEmail(email).then(()=> {\n    // Email sent.\n    message.success(\"CORREO ENVIADO\")\n    }).catch((error) => {\n     // An error happened.  \n    });\n\n\n  };\n  return (\n    <div style={{flexDirection:'column',display:'flex',justifyContent:'center', alignItems:'center', height: '-webkit-fill-available'}}>\n            <label style={{textAlign:'center', fontSize:60 , color: 'gold'} }>RECUPERA TU CONTRASEÑA </label>\n            <br/>\n            <Form style={{textAlign:'center'}} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                \n                <Input\n                placeholder={\"correo\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  size={\"large\"}\n                  type={'email'}\n                />\n              </Form.Item>\n              <Link to={'/Home'}>\n              <Button shape={\"round\"} type=\"primary\" onClick={submit} style={{backgroundColor:'royalblue'}}>\n                ENVIAR\n              </Button>\n              </Link>\n<br/>\n<br/>\n              <Link to={'/Home'}>\n              <Button shape={\"round\"} type=\"primary\"  style={{backgroundColor:'royalblue'}}>\n                INICIO\n              </Button>\n              </Link>\n\n            </Form>\n    </div>\n\n  );\n};\n\n\n\n","import React,{useState} from \"react\";\nimport { Form, Input,Col, Row, } from 'antd';\n\n\n\nexport default function FormasDeCampo({llenarcampos}) {\n    const { TextArea } = Input;\n    \n    return (\n       <Col span={6} style={{marginVertical:10}}>\n\n        <TextArea \n        className=\"inputs\"\n        style={{height:'fit-content'}} \n        rows={4}\n        onChange={(e) => \n        llenarcampos(e.target.value)} \n        placeholder={\"INFO\"} \n        autoSize true\n        />\n        \n        </Col>\n    )\n}\n\n\n","import React, { useState } from \"react\";\nimport { Button, Form, Input, Row, Col, Divider, Card, message } from 'antd';\nimport Formasdecampo from '../containers/formasdecampo';\nimport { Link, Render } from \"react-router-dom\";\n\nimport * as firebase from 'firebase';\nimport { Aplicacion } from '../config/firebaseconfig';\nimport { storage } from \"firebase\";\n\n\nexport default function NewInversion(props) {\n\n  const [desc, setD] = useState('');\n\n  const [titulo, setT] = useState('');\n  const [campos, setC] = useState('');\n  const [index, setIndex] = useState(0);\n  const [img, setI] = useState('');\n\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n\n  const llenarcampos = (rstring) => {\n    console.log(rstring)\n\n    let c = [...campos]\n    let n = campos.length\n    c[n] = rstring\n    setC(c)\n\n  }\n\n  const [formularios, setFormularios] = useState([<Formasdecampo llenarcampos={llenarcampos} value={campos} />]);\n\n  const submit = () => {\n    firebase.database().ref('inversion').push({\n      titulo: titulo,\n      descrip: desc,\n      campos: campos,\n      img: image.name,\n\n\n\n    })\n    console.log(img)\n  };\n\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n\n\n  };\n\n  const handleUpload = () => {\n    let st = firebase.storage().ref('images/' + image.name)\n\n    st.put(image)\n\n    message.success(\"IMAGEN ENVIADA\")\n\n\n  };\n\n\n  console.log(\"image: \", image);\n\n\n\n  return (\n    <Row>\n      <Col span={24}>\n        <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'gold' }}>NUEVA COMPRA</label>\n\n      </Col>\n      <Col span={24}>\n\n        <h3 style={{ color: 'gold' }}>El título debe ser unico para cada compra.</h3>\n        <h3 style={{ color: 'gold' }}>Para agregar una imagen, haga click en subir imagen,</h3>\n        <h3 style={{ color: 'gold' }}>Seleccione la imagen que quiere subir, haga click en guardar imagen.</h3>\n\n      </Col>\n\n      <Col span={24}>\n        <Form style={{ textAlign: 'center' }} >\n          <Row>\n            <Col span={6} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input\n                  className=\"inputs\"\n                  placeholder={\"TITULO\"}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setT(e.target.value)}\n                  value={titulo}\n                  size={\"default\"}\n\n                />\n              </Form.Item>\n            </Col>\n\n\n            <Col span={6} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                <Input\n                  className=\"inputs\"\n                  placeholder={\"DESCRIPCION\"}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setD(e.target.value)}\n                  value={desc}\n                  size={\"default\"}\n                />\n              </Form.Item>\n            </Col>\n\n\n            {\n              formularios.map((item) => {\n\n                return item;\n              })\n            }\n\n\n          \n          </Row>\n        </Form>\n      </Col>\n      <br />\n      <br />\n      <Col span={23}>\n      <input className=\"inputss\" type=\"file\" onChange={handleChange} style={{ width: 300, height: 32 }} /> \n      <br/>\n      <br/>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around'\n        }}>\n\n  \n\n          <Button\n            type=\"primary\" shape=\"round\" onClick={handleUpload} style={{ backgroundColor: 'royalblue' }}>\n            SUBIR IMAGEN\n      </Button>\n\n          <Link to=\"/Inversions\">\n            <Button\n              type=\"primary\" shape=\"round\" onClick={submit} style={{ backgroundColor: 'royalblue' }}>\n              GUARDAR\n          </Button>\n          </Link>\n\n          <Link to=\"/Home\">\n            <Button\n              type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n              INICIO\n         </Button>\n          </Link>\n\n        </div>\n      </Col>\n    </Row>\n\n  )\n}\n\n/*\n\n\n <div style={{\n\n      textAlign: 'center' ,\n      justifyContent: 'center'\n    }}>\n      <Row>\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'grey' }}>INVERSIONES</label>\n        </Col>\n        <Col span={24}>\n          <Link to=\"/Home\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              INICIO\n              </Button>\n          </Link>\n        </Col>\n        <br />\n        <br />\n        <Col span={24}>\n          <Link to=\"/NewInversion\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              NUEVA INVERSION</Button>\n          </Link>\n        </Col>\n        <Col span={24}>\n          <br />\n          <Input\n            id=\"Buscar\"\n            size={\"large\"}\n            style={{ textAlign: 'center', width:300 }}\n            placeholder=\"BUSCAR\"\n            onChange={(e) => setSearched(e.target.value.toLowerCase())}\n            value={searched}\n            autoComplete={\"off\"}\n          />\n          <h5 style={{ color: 'grey' }}>SI NO EXISTE REGISTRO DE SU BUSQUEDA, </h5>\n          <h5 style={{ color: 'grey' }}>ESTA MAL ESCRITA O </h5>\n          <h5 style={{ color: 'grey' }}>HAY INVERSIONES CON EL MISMO TITULO.  </h5>\n          <h5 style={{ color: 'grey' }}>PARA BUSCAR OTRO ATRIBUTO SELECCIONE</h5>\n          <h5 style={{ color: 'grey' }}>CONTROL F o COMMAND F </h5>\n\n          <Button onClick={ssearched} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n            BUSCAR\n          </Button>\n          <br />\n          <br />\n          <Col span={24}>\n            <Button onClick={refreshPage} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              NUEVA BUSQUEDA\n            </Button>\n          </Col>\n          <br />\n\n        </Col>\n\n        {\n          arrayofdb.map((item, index) => {\n            return (\n              <Row   >\n              <Col   >\n              <Card  shape=\"round\" className=\"invscampos\" autoSize true style={{ alignItems:'center', }} key={index} >\n                {item.titulo}\n                <br />\n                {item.tipo}\n                <br />\n                {item.desc}\n                <br />\n                <Link to={{ pathname: `/Inversion/${item.id}` }}>\n                <br />\n                <Button type=\"primary\" size='small' shape=\"round\" style={{ backgroundColor: 'royalblue', textAlign: 'center' }} >\n                    INSPECCIONAR\n                </Button>\n                </Link>\n              </Card>\n              </Col>\n              </Row>\n            )\n          })\n        }\n\n      </Row>\n    </div>\n\n\n\n\n\n          <Button type=\"primary\" onClick={addform} style={{ backgroundColor: 'grey' }}>\n            +\n          </Button>\n\n          <Button type=\"primary\" onClick={deletelastelement} style={{ backgroundColor: 'grey' }}>\n            -\n          </Button>\n\n          <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              SUBIR IMAGEN\n          </Button>\n\n*/\n\n/*\nimport React,{useState} from \"react\";\nimport { Button , Form, Input, Row, Col, Divider} from 'antd';\nimport Formasdecampo from '../containers/formasdecampo';\nimport {Link} from \"react-router-dom\";\nimport Column from \"antd/lib/table/Column\";\nimport * as firebase from 'firebase';\nimport {Aplicacion} from '../config/firebaseconfig';\n\nexport default function NewInversion(props) {\n\n    const [desc,setD] = useState('');\n    const [tipo,setType] = useState('');\n    const [titulo,setT] = useState('');\n\n    const [campos,setC] = useState(['']);\n\n    const [index, setIndex] = useState(0);\n\n    const llenarcampos=(rstring)=>{\n      console.log(rstring)\n\n      let c = [...campos]\n      let n =campos.length\n      c[n]=rstring\n      setC(c)\n\n    }\n\n    const [formularios,setFormularios] = useState([<Formasdecampo llenarcampos={llenarcampos} value={campos} />]);\n\n    const submit= ()=>{\n      firebase.database().ref('inversion').push({\n        titulo:titulo,\n        tipo:tipo,\n        descrip:desc,\n        campos:campos\n\n\n      })\n     };\n\n    const addform= ()=>{\n        let f = [...formularios];\n\n        f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos} value={campos[index]}/>);\n\n        setFormularios(f)\n    };\n\n    return (\n        <Row>\n        <Col span={24}>\n        <label style={{textAlign:'center', fontSize:100 , color: 'white'} }>NUEVA INVERSION</label>\n        </Col>\n\n        <Col span={24}>\n        <Form style={{textAlign:'center'}} >\n        <Row>\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n\n            <Input\n            placeholder={\"TITULO\"}\n            style={{textAlign:'center'}}\n              onChange={(e) => setT(e.target.value)}\n              value={titulo}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n            <Input\n            placeholder={\"TIPO\"}\n            style={{textAlign:'center'}}\n\n\n              onChange={(e) => setType(e.target.value)}\n\n              value={tipo}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n            <Input\n            placeholder={\"DESCRIPCION\"}\n            style={{textAlign:'center'}}\n              onChange={(e) => setD(e.target.value)}\n              value={desc}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          {\n            formularios.map((item)=>{\n\n                return item;\n            })\n          }\n\n        </Row>\n        </Form>\n        </Col>\n\n        <Col span={24}>\n\n        <div style={{display:'flex',\n        justifyContent: 'space-around'}}>\n        <Button type=\"primary\" onClick={addform} style={{backgroundColor:'grey'}}>\n            +\n          </Button>\n\n        <Link  to=\"/Inversions\">\n        <Button type=\"primary\" onClick={submit} style={{backgroundColor:'grey'}}>\n            GUARDAR\n          </Button>\n        </Link>\n\n        <Link  to=\"/Home\">\n        <Button type=\"primary\" shape=\"round\" style={{backgroundColor:'grey'}} >\n              INICIO\n        </Button>\n        </Link>\n        </div>\n\n        </Col>\n        </Row>\n\n    )\n}\n*/","import React,{useEffect,useState} from \"react\";\nimport {Link,Redirect} from \"react-router-dom\";\nimport * as firebase from 'firebase';\nimport {Aplicacion} from '../config/firebaseconfig';\nimport { Button , Form, Input, Card} from 'antd';\n\n\nexport default function Login() {\n  const [email, setEmail]=useState('');\n  const [password, setPassword]=useState('');\n  const [tipo,setType] = useState('');\n  const [nombre,setN] = useState('');\n  const [error, setError]=useState('');\n  const [UsuarioCreado,setUsuarioCreado]=useState('');\n\n\n\n  const submit =()=>{\n    \n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      // Update successful.\n      console.log('success')\n\n      setUsuarioCreado(\"USUARIO CREADO\")\n      console.log(UsuarioCreado)\n      \n       }, (error) => {\n        var errorMessage = error.message;\n        setError(errorMessage);\n      // An error happened.\n      console.log(error)\n      }).catch(function(error) {\n \n      \n     })\n//add to firebase db with  email and passwords requirements\n     \n    \n  };\n  return (\n    <div style={{flexDirection:'column',display:'flex',justifyContent:'center', alignItems:'center', height: '-webkit-fill-available'}}>\n            <label style={{textAlign:'center', fontSize:150 , color: 'white'} }>GRUPO EGO </label>\n            <br/>\n            <Form style={{textAlign:'center',flex:'auto'}} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input type={'email'}\n                placeholder={\"correo\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  size={\"default\"}\n                />\n              </Form.Item>\n\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n                <Input \n                placeholder={\"contraseña\"}\n                style={{textAlign:'center'}}\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  size={\"default\"} />\n              </Form.Item>\n\n\n              <Button type=\"primary\" onClick={submit} style={{backgroundColor:'grey'}} >\n                REGISTRO\n              </Button>\n              \n              {\n              UsuarioCreado ? <h1>{UsuarioCreado} </h1> : <h1>{error} </h1>\n              }\n              \n              \n\n             \n              <Link  to=\"/Home\">\n             <Button type=\"primary\" shape=\"rectangle\" style={{backgroundColor:'grey'}} >\n              INICIO\n             </Button>\n              </Link>\n              </Form>\n\n    </div>\n\n  );\n};\n\n","import React,{useState} from \"react\";\nimport { Form, Input,Col, Row, } from 'antd';\n\n\n\nexport default function FormasDeCampo({llenarcampos}) {\n    const { TextArea } = Input;\n    \n    return (\n       <Col span={6} style={{marginVertical:10}}>\n\n        <TextArea \n        className=\"inputs\"\n        style={{height:'fit-content'}} \n        rows={4}\n        onChange={(e) => \n        llenarcampos(e.target.value)} \n        placeholder={\"INFO\"} \n        autoSize true\n        />\n        \n        </Col>\n    )\n}\n\n\n","import React, { useState } from \"react\";\nimport { Button, Form, Input, Row, Col, Divider } from 'antd';\nimport Formasdecampo from '../containers/formasdecampoS';\nimport { Link } from \"react-router-dom\";\nimport Column from \"antd/lib/table/Column\";\nimport * as firebase from 'firebase';\nimport { Aplicacion } from '../config/firebaseconfig';\n\nexport default function NewInversion(props) {\n\n  const [titulo, setT] = useState('');\n\n  const [campos, setC] = useState('');\n\n\n\n  const llenarcampos = (rstring) => {\n    console.log(rstring)\n\n    let c = [...campos]\n    let n = campos.length\n    c[n] = rstring\n    setC(c)\n\n  }\n\n  const [formularios, setFormularios] = useState([<Formasdecampo llenarcampos={llenarcampos} value={campos} />]);\n\n  const submit = () => {\n    firebase.database().ref('venta').push({\n      titulo: titulo,\n\n      campos: campos\n\n\n    })\n  };\n\n  const addform = () => {\n    let f = [...formularios];\n\n    f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos}  />);\n\n    setFormularios(f)\n  };\n\n\n  const deletelastelement = () => {\n    let f = [...formularios];\n\n    f.pop();\n\n    setFormularios(f)\n  };\n\n  return (\n    <Row>\n      <Col span={24}>\n        <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'gold'  }}>NUEVA VENTA</label>\n      \n      </Col>\n      <Col span={24}>\n\n        <h3 style={{ color: 'gold' }}>El título debe ser unico para cada venta</h3>\n      </Col>\n\n      <Col span={24}>\n        <Form style={{ textAlign: 'center' }} >\n          <Row>\n            <Col span={6} >\n              <Form.Item\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}>\n\n                <Input\n                className=\"inputs\"\n                  placeholder={\"TITULO\"}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setT(e.target.value)}\n                  value={titulo}\n                  size={\"default\"} \n                  \n                />\n              </Form.Item>\n            </Col>\n\n            \n\n\n            {\n              formularios.map((item) => {\n\n                return item;\n              })\n            }\n\n          </Row>\n        </Form>\n      </Col>\n      <br />\n      <br />\n      <Col span={24}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around'\n        }}>\n\n          <Link to=\"/Sales\">\n            <Button \n            className=\"cbuttonss\"\n            type=\"primary\" shape=\"round\" onClick={submit} style={{ backgroundColor: 'royalblue' }}>\n              GUARDAR\n          </Button>\n          </Link>\n          <br />\n          <Link to=\"/Home\">\n            <Button\n            className=\"cbuttonss\"\n            type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n              INICIO\n             </Button>\n          </Link>\n        </div>\n\n      </Col>\n    </Row>\n\n  )\n}\n\n/*\n          <Button type=\"primary\" onClick={addform} style={{ backgroundColor: 'grey' }}>\n            +\n          </Button>\n\n          <Button type=\"primary\" onClick={deletelastelement} style={{ backgroundColor: 'grey' }}>\n            -\n          </Button>\n\n          <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'grey' }} >\n              SUBIR IMAGEN\n          </Button>\n\n*/\n\n/*\nimport React,{useState} from \"react\";\nimport { Button , Form, Input, Row, Col, Divider} from 'antd';\nimport Formasdecampo from '../containers/formasdecampo';\nimport {Link} from \"react-router-dom\";\nimport Column from \"antd/lib/table/Column\";\nimport * as firebase from 'firebase';\nimport {Aplicacion} from '../config/firebaseconfig';\n\nexport default function NewInversion(props) {\n\n    const [desc,setD] = useState('');\n    const [tipo,setType] = useState('');\n    const [titulo,setT] = useState('');\n\n    const [campos,setC] = useState(['']);\n\n    const [index, setIndex] = useState(0);\n\n    const llenarcampos=(rstring)=>{\n      console.log(rstring)\n\n      let c = [...campos]\n      let n =campos.length\n      c[n]=rstring\n      setC(c)\n\n    }\n\n    const [formularios,setFormularios] = useState([<Formasdecampo llenarcampos={llenarcampos} value={campos} />]);\n\n    const submit= ()=>{\n      firebase.database().ref('inversion').push({\n        titulo:titulo,\n        tipo:tipo,\n        descrip:desc,\n        campos:campos\n\n\n      })\n     };\n\n    const addform= ()=>{\n        let f = [...formularios];\n\n        f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos} value={campos[index]}/>);\n\n        setFormularios(f)\n    };\n\n    return (\n        <Row>\n        <Col span={24}>\n        <label style={{textAlign:'center', fontSize:100 , color: 'white'} }>NUEVA INVERSION</label>\n        </Col>\n\n        <Col span={24}>\n        <Form style={{textAlign:'center'}} >\n        <Row>\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n\n            <Input\n            placeholder={\"TITULO\"}\n            style={{textAlign:'center'}}\n              onChange={(e) => setT(e.target.value)}\n              value={titulo}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n            <Input\n            placeholder={\"TIPO\"}\n            style={{textAlign:'center'}}\n\n\n              onChange={(e) => setType(e.target.value)}\n\n              value={tipo}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          <Col span={6} >\n          <Form.Item\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}>\n            <Input\n            placeholder={\"DESCRIPCION\"}\n            style={{textAlign:'center'}}\n              onChange={(e) => setD(e.target.value)}\n              value={desc}\n              size={\"default\"}\n            />\n          </Form.Item>\n          </Col>\n\n          {\n            formularios.map((item)=>{\n\n                return item;\n            })\n          }\n\n        </Row>\n        </Form>\n        </Col>\n\n        <Col span={24}>\n\n        <div style={{display:'flex',\n        justifyContent: 'space-around'}}>\n        <Button type=\"primary\" onClick={addform} style={{backgroundColor:'grey'}}>\n            +\n          </Button>\n\n        <Link  to=\"/Inversions\">\n        <Button type=\"primary\" onClick={submit} style={{backgroundColor:'grey'}}>\n            GUARDAR\n          </Button>\n        </Link>\n\n        <Link  to=\"/Home\">\n        <Button type=\"primary\" shape=\"round\" style={{backgroundColor:'grey'}} >\n              INICIO\n        </Button>\n        </Link>\n        </div>\n\n        </Col>\n        </Row>\n\n    )\n}\n*/","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Button, Col, Card, Row, Input, message, Form } from 'antd';\nimport * as firebase from \"firebase/app\";\n\nexport default function Inversions(props) {\n\n  let ref = firebase.database().ref(\"/venta\");\n  const [variable, setVariable] = useState(false)\n  const [arrayofdb, setArrayofdb] = useState([])\n  let [searched, setSearched] = useState('');\n  const [st, setSt] = useState('');\n\n  console.log(searched)\n\n  useEffect(() => {\n    if (!variable) {\n\n      ref.once(\"value\", (snapshot) => {\n\n        console.log(snapshot)\n\n        snapshot.forEach((childSnapshot) => {\n\n          console.log(childSnapshot.key)\n\n          const childData = childSnapshot.val();\n\n          console.log(childData)\n          const titulo = childData.titulo;\n          const tipo = childData.tipo;\n          const desc = childData.descrip;\n          const campos = childData.campos;\n          const id = childSnapshot.key\n\n          if (campos) {\n            const arraydbaux = arrayofdb;\n            arraydbaux.push({\n              titulo: titulo,\n              desc: desc,\n              campos: campos,\n              id: id\n            })\n            setArrayofdb(arraydbaux)\n          }\n        });\n        setVariable(true)\n\n      });\n    }\n  }, [])\n\n  const ssearched = () => {\n    arrayofdb.map((item, index) => {\n      if (searched === item.titulo.toLowerCase() && searched !== -1) {\n        console.log(item.titulo)\n        console.log(item.desc)\n        console.log(item.campos)\n        console.log(item)\n\n        const arraydbaux = arrayofdb;\n        arraydbaux.splice({})\n\n        arraydbaux.push({\n          titulo: item.titulo,\n          desc: item.desc,\n          campos: item.campos,\n        })\n        setArrayofdb(arraydbaux)\n      } \n    })\n\n\n    setSearched('')\n  };\n\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  console.log(arrayofdb)\n\n  return (\n    <div style={{\n    \n      textAlign: 'center' ,\n      justifyContent: 'center'\n    }}>\n      <Row>\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'gold' }}>VENTAS</label>\n        </Col>\n        <Col span={24}>\n          <Link to=\"/Home\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n              INICIO\n              </Button>\n          </Link>\n        </Col>\n        <br />\n        <br />\n        <Col span={24}>\n          <Link to=\"/NewSale\">\n            <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n              NUEVA VENTA</Button>\n          </Link>\n        </Col>\n        <Col span={24}>\n          <br />\n          <Input\n            id=\"Buscar\"\n            size={\"large\"}\n            style={{ textAlign: 'center', width:300 }}\n            placeholder=\"BUSCA POR TITULO\"\n            onChange={(e) => setSearched(e.target.value.toLowerCase())}\n            value={searched}\n            autoComplete={\"off\"}\n          />\n          <h5 style={{ color: 'gold' }}>SI NO EXISTE REGISTRO DE SU BUSQUEDA, </h5>\n          <h5 style={{ color: 'gold' }}>ESTA MAL ESCRITA O </h5>\n          <h5 style={{ color: 'gold' }}>HAY VENTAS CON EL MISMO TITULO  </h5>\n      \n          <Button onClick={ssearched} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n            BUSCAR\n          </Button>\n          <br />\n          <br />\n          <Col span={24}>\n            <Button onClick={refreshPage} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n              NUEVA BUSQUEDA\n            </Button>\n          </Col>\n          <br />\n\n        </Col>\n        \n        {\n          arrayofdb.map((item, index) => {\n            return (\n              <Row   >\n              <Col   >\n              <Card  shape=\"round\" className=\"invscampos\" autoSize true style={{ width: 1440, alignItems:'center', backgroundColor:'rgb(101, 108, 146)', color:\"gold\",  }} key={index} >\n                {item.titulo}\n                <br />\n                {item.desc}\n                <br />\n                <Link to={{ pathname: `/Sale/${item.id}` }}>\n                <br />\n                <Button type=\"primary\" size='small' shape=\"round\" style={{ backgroundColor: 'royalblue', textAlign: 'center' }} >\n                    INSPECCIONAR\n                </Button>\n                </Link>\n              </Card>\n              </Col>\n              </Row>\n            )\n          })\n        }\n\n      </Row>\n    </div>\n  );\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter} from \"react-router-dom\";\nimport { Button, Col, Card, Row, Popconfirm, message,Input } from 'antd';\nimport * as firebase from \"firebase/app\";\n\nexport default withRouter( function Inversion(props) {\n\n  console.log(props)\n  var ref = firebase.database().ref(`/venta/${props.match.params.id}`);\n  console.log(ref)\n\n  const [arrayofdb, setArrayofdb] = useState({})\n  const [index, setIndex] = useState(0);\n  const [campos, setC] = useState('');\n  const [ndesc, setnD] = useState('');\n  const [ntitulo, setnT] = useState('');\n\n\n  useEffect(() => {\n    ref.once(\"value\", (snapshot) => {\n      console.log(snapshot.val())\n      const childData = snapshot.val();\n      setArrayofdb(childData)\n      console.log(childData)\n    });\n}, []);\n\n  const deleteI =()=> {\n    ref.remove();\n    message.success('COMPRA ELIMINADA');\n    props.history.push('/Sales')\n  };\n\n  function cancelD(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const updateT =()=> {\n    firebase.database().ref(`/venta/${props.match.params.id}/titulo`).set(ntitulo)\n    message.success('TITULO MODIFICADO');\n  };\n\n  function cancelT(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n\n  const [formularios, setFormularios] = useState([]);\n\n\n\n\n  const updateD = () => {\n    firebase.database().ref(`/venta/${props.match.params.id}/descrip`).set(ndesc)\n    message.success('DESCRIPCION MODIFICADA');\n  };\n\n  function cancelD(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const updateC = () => {\n    firebase.database().ref(`/venta/${props.match.params.id}/campos`).set(arrayofdb.campos)\n    message.success('CAMPO EDITADO');\n  };\n\n  function cancelc() {\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  function updateinput(e){\n    setArrayofdb(\n      {...arrayofdb,\n         campos: e.target.value\n      })\n  }\n\n  return (\n\n    <div style={{\n\n      display: 'flex',\n      textAlign: 'center' ,\n      justifyContent: 'center',\n      \n    }}>\n      <Row >\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'gold' }}>{arrayofdb.titulo}</label>\n\n        <br />\n\n        <Link to=\"/Home\">\n          <Button type=\"primary\" size={\"small\"}  shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n            INICIO\n        </Button>\n        </Link>\n        \n        <br />\n        <br />\n\n        <Link to=\"/Sales\">\n          <Button type=\"primary\" size={\"small\"}  shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n            VENTAS\n        </Button>\n        </Link>\n        <br />\n        <br />\n          <Input\n                  placeholder={`${arrayofdb.titulo} `}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnT(e.target.value)}\n                  value={ntitulo}\n                  size={\"default\"}\n          />\n          <br />\n          <br />\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateT}\n            onCancel={cancelT}\n            okText=\"SI\"\n            cancelText=\"NO\">\n             <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >EDITAR TITULO</Button>\n          </Popconfirm>\n\n          <br />\n          <br />\n          <Input\n                  placeholder={`${arrayofdb.descrip} `}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnD(e.target.value)}\n                  value={ndesc}\n                  size={\"default\"}\n          />\n          <br />\n          <br />\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateD}\n            onCancel={cancelD}\n            okText=\"SI\"\n            cancelText=\"NO\">\n             <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >EDITAR DESCRIPCION</Button>\n          </Popconfirm>\n          <br/>\n          <br/>\n          <Input.TextArea\n                  style={{textAlign: 'center' }}\n                  value={`${arrayofdb.campos}`}\n                  onChange={(e) => updateinput(e)}\n                  autoSize true \n          />\n          <br/>\n          <br/>\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateC}\n            onCancel={cancelc}\n            okText=\"SI\"\n            cancelText=\"NO\">\n            <Button type=\"primary\" shape=\"round\" size={\"small\"}  style={{ backgroundColor: 'royalblue' }}>EDITARINFO </Button>\n          </Popconfirm>\n\n          <br/>\n          <br/>\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={deleteI}\n            onCancel={cancelD}\n            okText=\"SI\"\n            cancelText=\"NO\">\n            <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >BORRAR </Button>\n          </Popconfirm>\n          <br/>\n          <br/>\n        </Col>\n      </Row>\n    </div>\n  );\n});\n\n/*\n  const submit = (campo2e) => {\n    firebase.database().ref(`/inversion/${props.match.params.id}/campos`).update({\n     campos:campos\n   })\n  };\n\n\n            {\n              formularios.map((item) => {\n\n                return item;\n\n              })\n          }\n          <br/>\n          <Button type=\"primary\" size={\"small\"} onClick={submit} style={{ backgroundColor: 'grey' }}>\n              GUARDAR CAMPO/CAMPOS\n          </Button>\n          <br/>\n\n\n                    {\n            arrayofdb.campos ? (\n              arrayofdb.campos.map((item, index) => {\n              \n                return(\n                  <Input\n                  placeholder={`EDITAR CAMPO ${item}`}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnD(e.target.value)}\n                  value={campo2e}\n                  size={\"default\"}\n                  />\n                )\n\n              }))\n              : null\n          }\n\n\n  const llenarcampos = (rstring) => {\n    console.log(rstring)\n\n    let c = [...campos]\n    console.log([campos])\n    let n = campos.length\n\n    c[n] = rstring\n    console.log(c)\n    setC(c)\n\n  }\n\n\n    const addform = () => {\n    let f = [...formularios];\n    f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos} value={campos[index]} />);\n    setFormularios(f)\n  };\n\n\n      firebase.database().ref(`/inversion/${props.match.params.id}/campos`).update({\n     campos\n   })\n\n\n\n            \n\n          {\n            arrayofdb.campos ? (\n              arrayofdb.campos.map((item, index) => {\n              \n                return(\n                  <p>{\n                    item\n                  }</p>\n                )\n\n              }))\n              : null\n          }\n*/","import React, { useState, useEffect } from \"react\";\nimport { Button, Form, Input, Row, Col, Divider, Card, message, Popconfirm } from 'antd';\nimport Formasdecampo from '../containers/formasdecampo';\nimport { Link } from \"react-router-dom\";\nimport Column from \"antd/lib/table/Column\";\nimport * as firebase from 'firebase';\nimport { Aplicacion } from '../config/firebaseconfig';\n\nexport default function NewNte(props) {\n\n    let ref = firebase.database().ref(\"/notas\");\n    const [variable, setVariable] = useState(false)\n    const [nota, setN] = useState('');\n    const [tit, setT] = useState('');\n    const [index, setIndex] = useState(0);\n    const [arrayofdb, setArrayofdb] = useState([])\n    let [searched, setSearched] = useState('');\n    const [st, setSt] = useState('');\n\n    useEffect(() => {\n        if (!variable) {\n\n            ref.once(\"value\", (snapshot) => {\n\n                console.log(snapshot)\n\n                snapshot.forEach((childSnapshot) => {\n\n                    console.log(childSnapshot.key)\n\n                    const childData = childSnapshot.val();\n\n                    console.log(childData)\n\n                    const n = childData.info;\n                    const t = childData.titulo\n                    const id = childSnapshot.key\n\n                    arrayofdb.push({\n                        titulo: t,\n                        info: n,\n                        id: id\n                    })\n                });\n                setVariable(true)\n            });\n        }\n    }, [])\n\n    function refreshPage() {\n        window.location.reload(true);\n    }\n\n    const submit = () => {\n        firebase.database().ref('notas').push({\n            titulo: tit,\n            info: nota\n        })\n        message.success('NOTA CREADA');\n\n        refreshPage()\n\n    };\n\n    const ssearched = () => {\n        arrayofdb.map((item, index) => {\n            if (searched === item.titulo.toLowerCase() && searched !== -1) {\n                console.log(item.titulo)\n                console.log(item.info)\n\n\n                const arraydbaux = arrayofdb;\n                arraydbaux.splice({})\n\n                arraydbaux.push({\n                    titulo: item.titulo,\n                    info: item.info\n\n                })\n                setArrayofdb(arraydbaux)\n            }\n        })\n        setSearched('')\n    };\n\n\n\n    return (\n        <div style={{\n            textAlign: 'center' ,\n            justifyContent: 'center'\n          }}>\n        <Row>\n            <Col span={24}>\n                <label style={{ textAlign: 'center', fontSize: 100, color: 'gold' }}>NOTAS</label>\n            </Col>\n            <Col span={24}>\n                <Form style={{ textAlign: 'center' }} >\n                    <Row>\n\n                        <Col span={24} style={{ marginVertical: 20 }}>\n                            <Input.TextArea\n                                style={{ textAlign: 'center', width: 300, height: 100 }}\n                                onChange={(e) => setT(e.target.value)}\n                                autoSize true\n                                placeholder={`TITULO `}\n                            />\n                        </Col>\n                        <br />\n                        <br />\n                        <Col span={24} style={{ marginVertical: 20 }}>\n                            <Input.TextArea\n                                style={{ textAlign: 'center', width: 300, height: 500 }}\n                                onChange={(e) => setN(e.target.value)}\n                                autoSize true\n                                placeholder={` NOTA `}\n                            />\n                        </Col>\n                    </Row>\n                </Form>\n                <br />\n\n            </Col>\n           \n\n            <Col span={24}>\n                <div style={{\n                    textAlign: 'center',\n                    justifyContent: 'center'\n                }}>\n\n                    <Button type=\"primary\" shape=\"round\" onClick={submit} style={{ backgroundColor: 'royalblue' }}>\n                        GUARDAR\n                   </Button>\n                    <br />\n                    <br />\n\n                    <Input\n                        id=\"Buscar\"\n                        size={\"medium\"}\n                        style={{ textAlign: 'center', width: 300 }}\n                        placeholder=\"BUSCA POR TITULO\"\n                        onChange={(e) => setSearched(e.target.value.toLowerCase())}\n                        value={searched}\n                        autoComplete={\"off\"}\n                    />\n\n                    <Col span={24}>\n                        <Button onClick={ssearched} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n                            BUSCAR\n                    </Button>\n                    </Col>\n                    <br />\n\n\n                    <Col span={24}>\n                        <Button onClick={refreshPage} type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue'}} >\n                            NUEVA BUSQUEDA\n                      </Button>\n                    </Col>\n\n                    <br />\n                    <Link to=\"/Home\">\n                        <Button type=\"primary\" shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n                            INICIO\n                    </Button>\n                    </Link>\n\n                    <br />\n                    <br />\n                    {\n                        arrayofdb.map((item, index) => {\n                            return (\n                                <Row   >\n                                    <Col   >\n                                        <Card shape=\"round\" className=\"invscampos\" autoSize true style={{ alignItems: 'center', backgroundColor:'rgb(101, 108, 146)', color:\"gold\", width:1440 }} key={index} >\n                                            {item.titulo}\n\n                                            <br />\n                                            <Link to={{ pathname: `/Nota/${item.id}` }}>\n                                                <br />\n                                                <Button type=\"primary\" size='small' shape=\"round\" style={{ backgroundColor: 'royalblue', textAlign: 'center' }} >\n                                                    INSPECCIONAR\n                                              </Button>\n                                            </Link>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            )\n                        })\n                    }\n                </div>\n            </Col>\n        </Row>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter} from \"react-router-dom\";\nimport { Button, Col, Card, Row, Popconfirm, message,Input } from 'antd';\nimport * as firebase from \"firebase/app\";\n\nexport default withRouter( function Nota(props) {\n\n  console.log(props)\n  var ref = firebase.database().ref(`/notas/${props.match.params.id}`);\n  console.log(ref)\n\n  const [arrayofdb, setArrayofdb] = useState({})\n\n  const [ntitulo, setnT] = useState('');\n  const [nti, seTi] = useState('');\n\n  useEffect(() => {\n    ref.once(\"value\", (snapshot) => {\n      console.log(snapshot.val())\n      const childData = snapshot.val();\n      setArrayofdb(childData)\n      console.log(childData)\n    });\n}, []);\n\nconst updateT =()=> {\n    firebase.database().ref(`/notas/${props.match.params.id}/titulo`).set(ntitulo)\n    message.success('TITULO MODIFICADO');\n  };\n\n  function cancelT(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n\n  function cancelc(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n  const updateC = () => {\n    firebase.database().ref(`/notas/${props.match.params.id}/info`).set(arrayofdb.info)\n    message.success('CAMPO EDITADO');\n  };\n\n\n  function updateinput(e){\n    setArrayofdb(\n      {...arrayofdb,\n         info: e.target.value\n      })\n  }\n\n  const deleteI =()=> {\n    ref.remove();\n    message.success('INVERSION ELIMINADA');\n    props.history.push('/Notas')\n  };\n\n\n  function cancelD(e) {\n    console.log(e);\n    message.error('NO SE EFECTUO CAMBIOS');\n  }\n\n\n  return (\n\n    <div style={{\n\n      display: 'flex',\n      textAlign: 'center' ,\n      justifyContent: 'center',\n      \n    }}>\n      <Row >\n        <Col span={24}>\n          <label className=\"titles\" style={{ textAlign: 'center', fontSize: 100, color: 'gold' }}>{arrayofdb.titulo}</label>\n\n        <br />\n\n        <Link to=\"/Home\">\n          <Button type=\"primary\" size={\"small\"}  shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n            INICIO\n        </Button>\n        </Link>\n        \n        <br />\n        <br />\n\n        <Link to=\"/Notas\">\n          <Button type=\"primary\" size={\"small\"}  shape=\"round\" style={{ backgroundColor: 'royalblue' }} >\n            NOTAS\n        </Button>\n        </Link>\n        <br />\n        <br />\n          <Input\n                  placeholder={`${arrayofdb.titulo} `}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnT(e.target.value)}\n                  value={ntitulo}\n                  size={\"default\"}\n          />\n          <br />\n          <br />\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateT}\n            onCancel={cancelT}\n            okText=\"SI\"\n            cancelText=\"NO\">\n             <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >EDITAR TITULO</Button>\n          </Popconfirm>\n          \n          <br />\n          <br />\n          \n          <Input.TextArea\n                  style={{textAlign: 'center' }}\n                  value={`${arrayofdb.info}`}\n                  onChange={(e) => updateinput(e)}\n                  autoSize true \n          />\n          <br/>\n          <br/>\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={updateC}\n            onCancel={cancelc}\n            okText=\"SI\"\n            cancelText=\"NO\">\n            <Button type=\"primary\" shape=\"round\" size={\"small\"}  style={{ backgroundColor: 'royalblue' }}>EDITAR NOTA</Button>\n          </Popconfirm>\n\n          <br/>\n          <br/>\n          <Popconfirm\n            title=\"¿ESTAS SEGURO?\"\n            onConfirm={deleteI}\n            onCancel={cancelD}\n            okText=\"SI\"\n            cancelText=\"NO\">\n            <Button type=\"primary\" shape=\"round\" size={\"small\"} style={{ backgroundColor: 'royalblue' }} >BORRAR </Button>\n          </Popconfirm>\n          <br/>\n          <br/>\n        </Col>\n      </Row>\n    </div>\n  );\n});\n\n/*\n  const submit = (campo2e) => {\n    firebase.database().ref(`/inversion/${props.match.params.id}/campos`).update({\n     campos:campos\n   })\n  };\n\n\n            {\n              formularios.map((item) => {\n\n                return item;\n\n              })\n          }\n          <br/>\n          <Button type=\"primary\" size={\"small\"} onClick={submit} style={{ backgroundColor: 'grey' }}>\n              GUARDAR CAMPO/CAMPOS\n          </Button>\n          <br/>\n\n\n                    {\n            arrayofdb.campos ? (\n              arrayofdb.campos.map((item, index) => {\n              \n                return(\n                  <Input\n                  placeholder={`EDITAR CAMPO ${item}`}\n                  style={{ textAlign: 'center' }}\n                  onChange={(e) => setnD(e.target.value)}\n                  value={campo2e}\n                  size={\"default\"}\n                  />\n                )\n\n              }))\n              : null\n          }\n\n\n  const llenarcampos = (rstring) => {\n    console.log(rstring)\n\n    let c = [...campos]\n    console.log([campos])\n    let n = campos.length\n\n    c[n] = rstring\n    console.log(c)\n    setC(c)\n\n  }\n\n\n    const addform = () => {\n    let f = [...formularios];\n    f.push(<Formasdecampo setC={setC} campos={campos} llenarcampos={llenarcampos} value={campos[index]} />);\n    setFormularios(f)\n  };\n\n\n      firebase.database().ref(`/inversion/${props.match.params.id}/campos`).update({\n     campos\n   })\n\n\n\n            \n\n          {\n            arrayofdb.campos ? (\n              arrayofdb.campos.map((item, index) => {\n              \n                return(\n                  <p>{\n                    item\n                  }</p>\n                )\n\n              }))\n              : null\n          }\n*/","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport * as firebase from \"firebase/app\";\nimport { Aplicacion } from \"./config/firebaseconfig\";\nimport Login from './views/Login';\nimport HomeA from './views/HomeAdmin';\n\nimport Employees from './views/Employees';\n\nimport Inversions from './views/Inversions';\nimport Inversion from './views/Inversion';\n\nimport Profile from './views/Profile';\n\nimport FPass from './views/FPass';\nimport NewInversion from './views/createInversion';\nimport Register from './views/register';\nimport NewSale from './views/createSale';\nimport Sales from './views/Sales';\nimport Sale from './views/Sale';\nimport Notas from './views/Notas';\nimport Nota from './views/nota';\n\n\n\nexport default function App() {\n  const [logged, setlogged] = useState(null)\n\n\n  const logout = () => {\n    firebase.auth().signOut()\n    setlogged(null)\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      console.log(user)\n      if (user) {\n\n\n        setlogged(true);\n\n\n      } else {\n        setlogged(null)\n      }\n    });\n  });\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" render={(props) => (logged ? <Redirect to=\"/Home\" /> : <Login {...props} />)} />\n\n        <Route exact path=\"/Home\" render={(props) => (logged ?\n\n          <HomeA {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n        <Route exact path=\"/Inversions\" render={(props) => (logged ?\n\n          <Inversions {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n        <Route exact path=\"/Inversion/:id\" render={(props) => (logged ?\n\n          <Inversion {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n        <Route exact path=\"/Profile\" render={(props) => (logged ?\n\n          <Profile {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n        <Route exact path=\"/Employees\" render={(props) => (logged ?\n\n          <Employees {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n\n\n        <Route exact path=\"/NewInversion\" render={(props) => (logged ?\n\n          <NewInversion {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n\n        <Route exact path=\"/NewSale\" render={(props) => (logged ?\n\n          <NewSale {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n\n        <Route exact path=\"/Sales\" render={(props) => (logged ?\n\n          <Sales {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n        <Route exact path=\"/Sale/:id\" render={(props) => (logged ?\n\n          <Sale {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n        <Route exact path=\"/Notas\" render={(props) => (logged ?\n\n          <Notas {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n        <Route exact path=\"/Nota/:id\" render={(props) => (logged ?\n\n          <Nota {...props} logout={logout} />\n\n          : <Login {...props} />)} />\n\n        <Route exact path='/FPass' component={FPass} />\n        <Route exact path='/Register' component={Register} />\n\n\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css' ;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}